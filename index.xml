<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Leon Li</title><link>https://byteflow777.github.io/</link><description>Recent content on Leon Li</description><generator>Hugo -- gohugo.io</generator><lastBuildDate>Tue, 07 Feb 2023 00:00:00 +0000</lastBuildDate><atom:link href="https://byteflow777.github.io/index.xml" rel="self" type="application/rss+xml"/><item><title>Java 枚举类型</title><link>https://byteflow777.github.io/post/java/enum/</link><pubDate>Tue, 07 Feb 2023 00:00:00 +0000</pubDate><guid>https://byteflow777.github.io/post/java/enum/</guid><description>枚举类型（enum type）是由一组具有相同含义的常量组合而成
在引入枚举类型之前，通常用一组 int 常量表示每种类型。
public class Color { private static final int RED = 1; private static final int GREEN = 2; private static final int BLACK = 3; } 用 int 常量表示的方法不具有类型安全性。方法只能接收 int 类型，不同 int 值表示不同的 Color，此时无法严格控制入参，很容易出现类型错误。
public void color(int color) { // do something } Java SE 1.5 版本引用了枚举类型，使用 enum 关键字修饰。在编译期间，编译器会对枚举类型进行修改和扩展。
枚举类型隐式使用 public static final 修饰（编译器修改），按照 Java 命名规范，所有名称都应该采用大写的形式。
public enum Color { RED, GREEN, BLACK; } 枚举类型可以额外增加属性，只需声明成员属性，并添加具有所有属性的构造器。</description></item><item><title>关于我</title><link>https://byteflow777.github.io/about/</link><pubDate>Thu, 19 Jan 2023 00:00:00 +0000</pubDate><guid>https://byteflow777.github.io/about/</guid><description>联系我 Email: byteflow777@gmail.com</description></item></channel></rss>