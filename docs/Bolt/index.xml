<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Bolt on Leon' Blog</title><link>https://ileonli.github.io/docs/Bolt/</link><description>Recent content in Bolt on Leon' Blog</description><generator>Hugo</generator><language>en</language><atom:link href="https://ileonli.github.io/docs/Bolt/index.xml" rel="self" type="application/rss+xml"/><item><title>Bolt 介绍</title><link>https://ileonli.github.io/docs/Bolt/introduction/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://ileonli.github.io/docs/Bolt/introduction/</guid><description>Bolt 介绍 # https://github.com/boltdb/bolt
Bolt 是一个使用 Go 语言开发的 KV 存储库。该项目的目标是为那些不需要完整数据库服务器（如：Postgres或MySQL）的项目提供一个简单、快速且可靠的数据库。
Bolt 目前已不再维护，CoreOS fork 了该项目，并继续维护 bbolt。
打开数据库 # Bolt 中的顶层对象是 DB。它在磁盘上表示为一个单一文件，并且代表了数据的一个一致性快照。
要打开数据库，只需使用 bolt.Open() 函数：
package main import ( &amp;#34;log&amp;#34; &amp;#34;github.com/boltdb/bolt&amp;#34; ) func main() { // Open the my.db data file in your current directory. // It will be created if it doesn&amp;#39;t exist. db, err := bolt.Open(&amp;#34;my.db&amp;#34;, 0600, nil) if err != nil { log.Fatal(err) } defer db.Close() ... } 请注意，Bolt 会对数据文件加锁，因此多个进程不能同时打开同一个数据库。尝试打开一个已经被打开的 Bolt 数据库将导致程序挂起，直到其他进程关闭该数据库。为了防止无限期等待，可以为 Open() 函数传递一个超时选项：</description></item><item><title>Bolt 存储与缓存</title><link>https://ileonli.github.io/docs/Bolt/storage/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://ileonli.github.io/docs/Bolt/storage/</guid><description>Bolt 存储与缓存 # https://github.com/boltdb/bolt
当我们使用 bolt.Open 新建一个数据库实例时，会生成一个 1.db 文件，该文件包含了实例的所有数据。
package main import &amp;#34;github.com/boltdb/bolt&amp;#34; func main() { db, err := bolt.Open(&amp;#34;1.db&amp;#34;, 0600, nil) if err != nil { panic(err) } defer db.Close() } 页（Page） # Bolt 将数据库文件划分为固定大小的页，作为读写的最小单位。每个页的大小由文件系统中的 PAGE_SIZE 决定，通常表示磁盘或文件的一个读写单元大小。文件系统将数据划分为若干页，以便于对磁盘进行高效的读写操作。。
可以通过 getconf 获取当前操作系统页的大小：
$ getconf PAGE_SIZE 4096 可以使用 Go 提供的 os.Getpagesize() 获取当前操作系统页的大小，Bolt 也会通过此方法获取页大小：
pagesize := os.Getpagesize() fmt.Println(pagesize) Bolt 提供了获取数据库信息的 命令行工具。
通过此工具可查看刚创建的数据库文件的结构：
$ bolt pages 1.db ID TYPE ITEMS OVRFLW ======== ========== ====== ====== 0 meta 0 1 meta 0 2 freelist 0 3 leaf 0 一个空的 Bolt 实例由 4 个页构成，包含：2 个 meta 页、1 个 freelist 页和 1 个 leaf 页。</description></item></channel></rss>